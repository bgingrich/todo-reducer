{"ast":null,"code":"import _slicedToArray from \"/Users/bgingrich/Desktop/reducer-todo/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bgingrich/Desktop/reducer-todo/my-app/src/components/TodoForm.js\";\nimport React, { useState, useReducer } from 'react';\nimport Todo from './Todo';\nimport { initialState, reducer } from '../reducers/todoReducer';\n\nconst TodoForm = () => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  console.log('TODOFORM STATE: ', state);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputText = _useState2[0],\n        setInputText = _useState2[1];\n\n  const handleChanges = event => {\n    setInputText(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch({\n      type: 'ADD_TODO',\n      payload: inputText\n    });\n    setInputText('');\n  };\n\n  const clearForm = event => {\n    event.preventDefault();\n    dispatch({\n      type: 'CLEAR_COMPLETED',\n      payload: state\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Enter Todo\"), React.createElement(\"input\", {\n    id: \"todo\",\n    type: \"text\",\n    name: \"todo\",\n    value: inputText,\n    onChange: handleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"button\", {\n    onClick: clearForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear Completed\")), React.createElement(Todo, {\n    state: state,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/bgingrich/Desktop/reducer-todo/my-app/src/components/TodoForm.js"],"names":["React","useState","useReducer","Todo","initialState","reducer","TodoForm","state","dispatch","console","log","inputText","setInputText","handleChanges","event","target","value","handleSubmit","preventDefault","type","payload","clearForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,yBAAtC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBACOJ,UAAU,CAACG,OAAD,EAAUD,YAAV,CADjB;AAAA;AAAA,QACZG,KADY;AAAA,QACLC,QADK;;AAEnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,KAAhC;;AAFmB,oBAGeN,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,QAGZU,SAHY;AAAA,QAGDC,YAHC;;AAKnB,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGH,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACI,cAAN;AACAV,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAET;AAA7B,KAAD,CAAR;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAJD;;AAMA,QAAMS,SAAS,GAAGP,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACI,cAAN;AACAV,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEb;AAApC,KAAD,CAAR;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACA,IAAA,EAAE,EAAC,MADH;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,KAAK,EAAEI,SAJP;AAKA,IAAA,QAAQ,EAAEE,aALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,EAUI;AAAQ,IAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,CADJ,EAaQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,KAAb;AAAoB,IAAA,QAAQ,EAAEC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CADJ;AAiBH,CArCD;;AAuCA,eAAeF,QAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\n\nimport Todo from './Todo';\n\nimport { initialState, reducer } from '../reducers/todoReducer';\n\nconst TodoForm = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    console.log('TODOFORM STATE: ', state)\n    const [inputText, setInputText] = useState('')\n\n    const handleChanges = event => {\n        setInputText(event.target.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch({ type: 'ADD_TODO', payload: inputText })\n        setInputText('')\n    }\n\n    const clearForm = event => {\n        event.preventDefault();\n        dispatch({ type: 'CLEAR_COMPLETED', payload: state})\n    }\n\n    return (\n        <div>\n            <form>\n                <label htmlFor='todo'>Enter Todo</label>\n                <input \n                id='todo'\n                type='text'\n                name='todo'\n                value={inputText}\n                onChange={handleChanges}\n                />\n                <button onClick={handleSubmit}>Add</button>\n                <button onClick={clearForm}>Clear Completed</button>\n            </form>\n                <Todo state={state} dispatch={dispatch}/>\n        </div>\n    )\n}\n\nexport default TodoForm; "]},"metadata":{},"sourceType":"module"}