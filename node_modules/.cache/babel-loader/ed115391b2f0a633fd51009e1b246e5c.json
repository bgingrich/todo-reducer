{"ast":null,"code":"import _objectSpread from \"/Users/bgingrich/Desktop/reducer-todo/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  todos: [{\n    todo: 'Learn about reducers',\n    completed: false,\n    key: Date.now\n  }, {\n    todo: 'Learn about redux',\n    completed: false,\n    key: Date.now\n  }, {\n    todo: 'Learn python',\n    completed: false,\n    key: Date.now\n  }]\n};\nexport const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return _objectSpread({}, state, {\n        todos: [...state.todos, {\n          key: Date.now,\n          todo: action.text,\n          completed: false\n        }]\n      });\n\n    case \"TOGGLE_COMPLETE\":\n      return _objectSpread({}, state, {\n        todos: state.todos.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo)\n      });\n\n    case 'CLEAR_COMPLETED':\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(todo => !todo.completed)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/bgingrich/Desktop/reducer-todo/my-app/src/reducers/todoReducer.js"],"names":["initialState","todos","todo","completed","key","Date","now","todoReducer","state","action","type","text","map","id","filter"],"mappings":";AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,IAAI,EAAE,sBADV;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHd,GADG,EAMD;AACEJ,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHZ,GANC,EAWD;AACEJ,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHZ,GAXC;AADiB,CAArB;AAmBL,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACI,+BAAYF,KAAZ;AAEGP,QAAAA,KAAK,EAAE,CACH,GAAGO,KAAK,CAACP,KADN,EAEH;AACIG,UAAAA,GAAG,EAAEC,IAAI,CAACC,GADd;AAEIJ,UAAAA,IAAI,EAAEO,MAAM,CAACE,IAFjB;AAGIR,UAAAA,SAAS,EAAE;AAHf,SAFG;AAFV;;AAYL,SAAK,iBAAL;AACI,+BAAYK,KAAZ;AAEIP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYW,GAAZ,CAAiBV,IAAI,IACxBA,IAAI,CAACW,EAAL,KAAYJ,MAAM,CAACI,EAAnB,qBACOX,IADP;AAEIC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAFrB,aAGID,IAJD;AAFX;;AASA,SAAK,iBAAL;AACI,+BACOM,KADP;AAEIP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYa,MAAZ,CAAmBZ,IAAI,IAAI,CAACA,IAAI,CAACC,SAAjC;AAFX;;AAKR;AACI,aAAOK,KAAP;AA/BN;AAiCH,CAlCM","sourcesContent":["export const initialState = {\n    todos: [\n        {\n            todo: 'Learn about reducers',\n            completed: false,\n            key: Date.now\n          },\n          {\n            todo: 'Learn about redux',\n            completed: false,\n            key: Date.now\n          },\n          {\n            todo: 'Learn python',\n            completed: false,\n            key: Date.now\n          }\n    ]\n}\n  export const todoReducer = (state =[], action) => {\n      switch (action.type) {\n         case \"ADD_TODO\":\n             return { ...state, \n\n                todos: [\n                    ...state.todos,\n                    {\n                        key: Date.now,\n                        todo: action.text,\n                        completed: false\n                      }\n                ]\n             };\n\n        case \"TOGGLE_COMPLETE\":\n            return { ...state, \n\n                todos: state.todos.map( todo =>\n                    todo.id === action.id ? {\n                        ...todo,\n                        completed: !todo.completed\n                    } : todo)\n            };\n\n            case 'CLEAR_COMPLETED' : \n                return {\n                    ...state,\n                    todos: state.todos.filter(todo => !todo.completed)\n                };\n\n        default:\n            return state;\n      }\n  }; "]},"metadata":{},"sourceType":"module"}