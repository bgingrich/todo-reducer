{"ast":null,"code":"import _objectSpread from \"/Users/bgingrich/Desktop/reducer-todo/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  todos: [{\n    todo: 'Learn about reducers',\n    completed: false,\n    key: Date.now\n  }, {\n    todo: 'Learn about redux',\n    completed: false,\n    key: Date.now\n  }, {\n    todo: 'Learn Python',\n    completed: false,\n    key: Date.now\n  }]\n};\nexport const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [...state, {\n        item: action.payload,\n        completed: false,\n        id: Date.now()\n      }];\n\n    case \"TOGGLE_COMPLETED\":\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return _objectSpread({}, todo, {\n            completed: !todo.completed\n          });\n        } else {\n          return todo;\n        }\n      });\n\n    case \"CLEAR_COMPLETED\":\n      return state.filter(todo => !todo.completed);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/bgingrich/Desktop/reducer-todo/my-app/src/reducers/reducer.js"],"names":["initialState","todos","todo","completed","key","Date","now","todoReducer","state","action","type","item","payload","id","map","filter"],"mappings":";AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,IAAI,EAAE,sBADV;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHd,GADG,EAMD;AACEJ,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHZ,GANC,EAWD;AACEJ,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAEC,IAAI,CAACC;AAHZ,GAXC;AADiB,CAArB;AAoBL,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACG,aAAO,CACH,GAAGF,KADA,EAEH;AAAEG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAAf;AAAwBT,QAAAA,SAAS,EAAE,KAAnC;AAA0CU,QAAAA,EAAE,EAAER,IAAI,CAACC,GAAL;AAA9C,OAFG,CAAP;;AAKA,SAAK,kBAAL;AACE,aAAOE,KAAK,CAACM,GAAN,CAAUZ,IAAI,IAAI;AACvB,YAAIA,IAAI,CAACW,EAAL,KAAYJ,MAAM,CAACG,OAAvB,EAAgC;AAC9B,mCAAYV,IAAZ;AAAkBC,YAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAAnC;AACD,SAFD,MAEO;AACL,iBAAOD,IAAP;AACD;AACF,OANM,CAAP;;AAOF,SAAK,iBAAL;AACE,aAAOM,KAAK,CAACO,MAAN,CAAab,IAAI,IAAI,CAACA,IAAI,CAACC,SAA3B,CAAP;;AACF;AACE,aAAOK,KAAP;AAlBR;AAoBG,CArBA","sourcesContent":["export const initialState = {\n    todos: [\n        {\n            todo: 'Learn about reducers',\n            completed: false,\n            key: Date.now\n          },\n          {\n            todo: 'Learn about redux',\n            completed: false,\n            key: Date.now\n          },\n          {\n            todo: 'Learn Python',\n            completed: false,\n            key: Date.now\n          }\n    ]\n}\n\n  export const todoReducer = (state =[], action) => {\n      switch (action.type) {\n         case \"ADD_TODO\":\n            return [\n                ...state,\n                { item: action.payload, completed: false, id: Date.now() }\n              ];\n        \n            case \"TOGGLE_COMPLETED\":\n              return state.map(todo => {\n                if (todo.id === action.payload) {\n                  return { ...todo, completed: !todo.completed };\n                } else {\n                  return todo;\n                }\n              });\n            case \"CLEAR_COMPLETED\":\n              return state.filter(todo => !todo.completed);\n            default:\n              return state;\n          }\n        };"]},"metadata":{},"sourceType":"module"}